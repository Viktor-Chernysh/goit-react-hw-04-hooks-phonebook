{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/Filter/Filter.js","components/Form/Form.js","components/Contacts/Contacts.js","App.js","hooks/useLocaleStorage.js","index.js"],"names":["module","exports","Section","props","children","className","s","section","Filter","filter","inputId","uuidv4","type","id","name","onChange","propType","PropTypes","func","nameInputId","numberInputId","Form","AddNewContact","useState","setName","number","setNumber","handleChange","e","target","value","trim","form","onSubmit","preventDefault","contactObject","htmlFor","pattern","title","required","input","button","Contacts","contacts","deleteContact","contact_list","map","contact_item","onClick","contactsArr","App","key","initValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","length","useLocalStorage","setContacts","setFilter","contact","addedName","el","toLowerCase","includes","addedNumber","alert","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df35424.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2asuf\",\"button\":\"Form_button__w4IZj\",\"input\":\"Form_input__1qUOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"Contacts_contact_list__wSXb2\",\"contact_item\":\"Contacts_contact_item__9VTHs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1IK81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2PDWl\"};","import s from './Section.module.css';\r\nfunction Section(props) {\r\n  const { children } = props;\r\n  return <section className={s.section}>{children}</section>;\r\n}\r\nexport default Section;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ filter }) {\r\n  const inputId = uuidv4();\r\n  return (\r\n    <label className={s.filter}>\r\n      <div>Find contact by name</div>\r\n      <input type=\"text\" id={inputId} name=\"filter\" onChange={filter} />\r\n    </label>\r\n  );\r\n}\r\nFilter.propType = {\r\n  filter: PropTypes.func,\r\n};\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Form.module.css';\r\n\r\nconst nameInputId = uuidv4();\r\nconst numberInputId = uuidv4();\r\n\r\nexport default function Form({ AddNewContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contactObject = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    AddNewContact(contactObject);\r\n    resetForm();\r\n  };\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value.trim());\r\n        break;\r\n      case 'number':\r\n        setNumber(value.trim());\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Name</label>\r\n      <input\r\n        id={nameInputId}\r\n        value={name}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <label htmlFor={numberInputId}>Number</label>\r\n      <input\r\n        className={s.input}\r\n        id={numberInputId}\r\n        value={number}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nForm.propTypes = {\r\n  AddNewContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nexport default function Contacts({ contacts, deleteContact }) {\r\n  return (\r\n    <ol className={s.contact_list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contact_item} key={id}>\r\n          {name}:<span>{number}</span>{' '}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteContact(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport './App.css';\r\nimport Section from './components/Section/Section';\r\nimport Filter from './components/Filter/Filter';\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts/Contacts';\r\nimport useLocalStorage from './hooks/useLocaleStorage';\r\n\r\nconst contactsArr = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', contactsArr);\r\n  const [filter, setFilter] = useState('');\r\n  // console.log(contacts);\r\n  const AddNewContact = contact => {\r\n    const addedName = contacts\r\n      .map(el => el.name.toLowerCase())\r\n      .includes(contact.name.toLowerCase());\r\n    const addedNumber = contacts.map(el => el.number).includes(contact.number);\r\n    if (addedName && addedNumber) {\r\n      alert(`${contact.name} is already in contacts!`);\r\n      return;\r\n    }\r\n    // console.log(contacts);\r\n    setContacts(prevState => [...prevState, contact]);\r\n    // console.log(contacts);\r\n  };\r\n\r\n  const addFilter = e => {\r\n    setFilter(e.target.value.trim());\r\n  };\r\n\r\n  const filteredContacts = () => {\r\n    // console.log(contacts);\r\n    return contacts.filter(el =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    setContacts(contacts.filter(el => el.id !== id));\r\n  };\r\n  return (\r\n    <>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <Form AddNewContact={AddNewContact} />\r\n      </Section>\r\n      {contacts.length > 0 && (\r\n        <Section>\r\n          <h2>Contacts</h2>\r\n          <Filter filter={addFilter} />\r\n          <Contacts\r\n            contacts={filteredContacts()}\r\n            deleteContact={deleteContact}\r\n          />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport default function useLocalStorage(key, initValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? initValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n    if (state.length === 0) {\r\n      window.localStorage.setItem(key, JSON.stringify(initValue));\r\n    }\r\n  }, [initValue, key, state]);\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}