{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/Filter/Filter.js","components/Form/Form.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","props","children","className","s","section","Filter","filter","inputId","uuidv4","type","id","name","onChange","propType","PropTypes","string","Form","state","number","handleSubmit","e","preventDefault","contactObject","AddNewContact","resetForm","handleChange","setState","target","value","nameInputId","numberInputId","this","form","onSubmit","htmlFor","pattern","title","required","input","button","Component","Contacts","contacts","deleteContact","contact_list","map","contact_item","onClick","App","contact","addedName","el","toLowerCase","includes","addedNumber","alert","prevState","addFilter","trim","filteredContacts","toLocaleLowerCase","contactsLocal","localStorage","getItem","parsedContacts","JSON","parse","length","clear","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.100a18c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1IK81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2PDWl\"};","import s from './Section.module.css';\r\nfunction Section(props) {\r\n  const { children } = props;\r\n  return <section className={s.section}>{children}</section>;\r\n}\r\nexport default Section;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ filter }) {\r\n  const inputId = uuidv4();\r\n  return (\r\n    <label className={s.filter}>\r\n      <div>Find contact by name</div>\r\n      <input type=\"text\" id={inputId} name=\"filter\" onChange={filter} />\r\n    </label>\r\n  );\r\n}\r\nFilter.propType = {\r\n  filter: PropTypes.string,\r\n};\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contactObject = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    // this.setState({});\r\n    this.props.AddNewContact(contactObject);\r\n    this.resetForm();\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  render() {\r\n    const { nameInputId, numberInputId, handleSubmit, handleChange } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameInputId}>Name</label>\r\n        <input\r\n          id={nameInputId}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label htmlFor={numberInputId}>Number</label>\r\n        <input\r\n          className={s.input}\r\n          id={numberInputId}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nexport default function Contacts({ contacts, deleteContact }) {\r\n  return (\r\n    <ol className={s.contact_list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contact_item} key={id}>\r\n          {name}:<span>{number}</span>{' '}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteContact(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport './App.css';\r\nimport Section from './components/Section/Section';\r\nimport Filter from './components/Filter/Filter';\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts/Contacts';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  AddNewContact = contact => {\r\n    const addedName = this.state.contacts\r\n      .map(el => el.name.toLowerCase())\r\n      .includes(contact.name.toLowerCase());\r\n    const addedNumber = this.state.contacts\r\n      .map(el => el.number)\r\n      .includes(contact.number);\r\n    if (addedName && addedNumber) {\r\n      alert(`${contact.name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  addFilter = e => {\r\n    this.setState({ filter: e.target.value.trim() });\r\n  };\r\n  filteredContacts = () => {\r\n    return this.state.contacts.filter(el =>\r\n      el.name\r\n        .toLocaleLowerCase()\r\n        .includes(this.state.filter.toLocaleLowerCase()),\r\n    );\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(el => el.id !== id),\r\n    }));\r\n  };\r\n  componentDidMount() {\r\n    const contactsLocal = localStorage.getItem('contacts');\r\n\r\n    if (contactsLocal) {\r\n      const parsedContacts = JSON.parse(contactsLocal);\r\n      if (parsedContacts.length === 0) {\r\n        localStorage.clear('contacts');\r\n        return;\r\n      }\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { AddNewContact, addFilter, deleteContact, filteredContacts } = this;\r\n    return (\r\n      <>\r\n        <Section>\r\n          <h1>Phonebook</h1>\r\n          <Form AddNewContact={AddNewContact} />\r\n        </Section>\r\n        {this.state.contacts.length > 0 && (\r\n          <Section>\r\n            <h2>Contacts</h2>\r\n            <Filter filter={addFilter} />\r\n            <Contacts\r\n              contacts={filteredContacts()}\r\n              deleteContact={deleteContact}\r\n            />\r\n          </Section>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2asuf\",\"button\":\"Form_button__w4IZj\",\"input\":\"Form_input__1qUOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"Contacts_contact_list__wSXb2\",\"contact_item\":\"Contacts_contact_item__9VTHs\"};"],"sourceRoot":""}